# Generated by Django 5.1.3 on 2025-07-21 10:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('form_type', models.CharField(choices=[('contact', 'Contact Form'), ('feedback', 'Feedback Form'), ('survey', 'Survey Form'), ('application', 'Application Form'), ('other', 'Other')], default='other', max_length=20, verbose_name='form type')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_forms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Form',
                'verbose_name_plural': 'Forms',
                'db_table': 'forms',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200, verbose_name='label')),
                ('field_type', models.CharField(choices=[('text', 'Text'), ('email', 'Email'), ('number', 'Number'), ('tel', 'Phone'), ('url', 'URL'), ('textarea', 'Textarea'), ('select', 'Select'), ('radio', 'Radio'), ('checkbox', 'Checkbox'), ('date', 'Date'), ('time', 'Time'), ('datetime', 'DateTime'), ('file', 'File')], max_length=20, verbose_name='field type')),
                ('placeholder', models.CharField(blank=True, max_length=200, verbose_name='placeholder')),
                ('help_text', models.TextField(blank=True, verbose_name='help text')),
                ('is_required', models.BooleanField(default=False, verbose_name='is required')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('options', models.JSONField(blank=True, help_text='For select, radio, checkbox fields', null=True, verbose_name='options')),
                ('validation_rules', models.JSONField(blank=True, null=True, verbose_name='validation rules')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='forms.form')),
            ],
            options={
                'verbose_name': 'Form Field',
                'verbose_name_plural': 'Form Fields',
                'db_table': 'form_fields',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='FormSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_data', models.JSONField(verbose_name='submission data')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='status')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, verbose_name='submitted at')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='reviewed at')),
                ('notes', models.TextField(blank=True, verbose_name='notes')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='forms.form')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_submissions', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='form_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Form Submission',
                'verbose_name_plural': 'Form Submissions',
                'db_table': 'form_submissions',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='BogieChecksheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_number', models.CharField(max_length=50, unique=True, verbose_name='form number')),
                ('inspection_date', models.DateField(verbose_name='inspection date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('bogie_no', models.CharField(max_length=50, verbose_name='bogie number')),
                ('maker_year_built', models.CharField(max_length=100, verbose_name='maker/year built')),
                ('incoming_div_and_date', models.CharField(max_length=200, verbose_name='incoming division and date')),
                ('deficit_components', models.TextField(blank=True, default='None', verbose_name='deficit components')),
                ('date_of_ioh', models.DateField(verbose_name='date of IOH')),
                ('bogie_frame_condition', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor'), ('Damaged', 'Damaged')], max_length=50, verbose_name='bogie frame condition')),
                ('bolster', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor'), ('Damaged', 'Damaged')], max_length=50, verbose_name='bolster')),
                ('bolster_suspension_bracket', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor'), ('Cracked', 'Cracked'), ('Damaged', 'Damaged')], max_length=50, verbose_name='bolster suspension bracket')),
                ('lower_spring_seat', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor'), ('Damaged', 'Damaged')], max_length=50, verbose_name='lower spring seat')),
                ('axle_guide', models.CharField(choices=[('Good', 'Good'), ('Fair', 'Fair'), ('Worn', 'Worn'), ('Damaged', 'Damaged')], max_length=50, verbose_name='axle guide')),
                ('cylinder_body', models.CharField(choices=[('GOOD', 'Good'), ('FAIR', 'Fair'), ('WORN OUT', 'Worn Out'), ('DAMAGED', 'Damaged')], max_length=50, verbose_name='cylinder body')),
                ('piston_trunnion', models.CharField(choices=[('GOOD', 'Good'), ('FAIR', 'Fair'), ('WORN OUT', 'Worn Out'), ('DAMAGED', 'Damaged')], max_length=50, verbose_name='piston trunnion')),
                ('adjusting_tube', models.CharField(choices=[('GOOD', 'Good'), ('FAIR', 'Fair'), ('WORN OUT', 'Worn Out'), ('DAMAGED', 'Damaged')], max_length=50, verbose_name='adjusting tube')),
                ('plunger_spring', models.CharField(choices=[('GOOD', 'Good'), ('FAIR', 'Fair'), ('WORN OUT', 'Worn Out'), ('DAMAGED', 'Damaged')], max_length=50, verbose_name='plunger spring')),
                ('status', models.CharField(choices=[('saved', 'Saved'), ('submitted', 'Submitted'), ('reviewed', 'Reviewed'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='saved', max_length=20, verbose_name='status')),
                ('inspection_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bogie_checksheets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bogie Checksheet',
                'verbose_name_plural': 'Bogie Checksheets',
                'db_table': 'bogie_checksheets',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['form_number'], name='bogie_check_form_nu_f108d3_idx'), models.Index(fields=['inspection_by'], name='bogie_check_inspect_58ad14_idx'), models.Index(fields=['inspection_date'], name='bogie_check_inspect_aea2c4_idx'), models.Index(fields=['bogie_no'], name='bogie_check_bogie_n_502add_idx'), models.Index(fields=['status'], name='bogie_check_status_2c0a63_idx')],
            },
        ),
        migrations.CreateModel(
            name='WheelSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_number', models.CharField(max_length=50, unique=True, verbose_name='form number')),
                ('submitted_date', models.DateField(verbose_name='submitted date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('tread_diameter_new', models.CharField(help_text='e.g., 915 (900-1000)', max_length=100, verbose_name='tread diameter new')),
                ('last_shop_issue_size', models.CharField(help_text='e.g., 837 (800-900)', max_length=100, verbose_name='last shop issue size')),
                ('condemning_dia', models.CharField(help_text='e.g., 825 (800-900)', max_length=100, verbose_name='condemning diameter')),
                ('wheel_gauge', models.CharField(help_text='e.g., 1600 (+2,-1)', max_length=100, verbose_name='wheel gauge')),
                ('variation_same_axle', models.CharField(help_text='e.g., 0.5', max_length=50, verbose_name='variation same axle')),
                ('variation_same_bogie', models.CharField(help_text='e.g., 5', max_length=50, verbose_name='variation same bogie')),
                ('variation_same_coach', models.CharField(help_text='e.g., 13', max_length=50, verbose_name='variation same coach')),
                ('wheel_profile', models.CharField(help_text='e.g., 29.4 Flange Thickness', max_length=100, verbose_name='wheel profile')),
                ('intermediate_wwp', models.CharField(help_text='e.g., 20 TO 28', max_length=100, verbose_name='intermediate WWP')),
                ('bearing_seat_diameter', models.CharField(help_text='e.g., 130.043 TO 130.068', max_length=100, verbose_name='bearing seat diameter')),
                ('roller_bearing_outer_dia', models.CharField(help_text='e.g., 280 (+0.0/-0.035)', max_length=100, verbose_name='roller bearing outer diameter')),
                ('roller_bearing_bore_dia', models.CharField(help_text='e.g., 130 (+0.0/-0.025)', max_length=100, verbose_name='roller bearing bore diameter')),
                ('roller_bearing_width', models.CharField(help_text='e.g., 93 (+0/-0.250)', max_length=100, verbose_name='roller bearing width')),
                ('axle_box_housing_bore_dia', models.CharField(help_text='e.g., 280 (+0.030/+0.052)', max_length=100, verbose_name='axle box housing bore diameter')),
                ('wheel_disc_width', models.CharField(help_text='e.g., 127 (+4/-0)', max_length=100, verbose_name='wheel disc width')),
                ('status', models.CharField(choices=[('saved', 'Saved'), ('submitted', 'Submitted'), ('reviewed', 'Reviewed'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='saved', max_length=20, verbose_name='status')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wheel_specifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wheel Specification',
                'verbose_name_plural': 'Wheel Specifications',
                'db_table': 'wheel_specifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['form_number'], name='wheel_speci_form_nu_a57564_idx'), models.Index(fields=['submitted_by'], name='wheel_speci_submitt_c6b994_idx'), models.Index(fields=['submitted_date'], name='wheel_speci_submitt_b1abad_idx'), models.Index(fields=['status'], name='wheel_speci_status_e118f6_idx')],
            },
        ),
    ]
